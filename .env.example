# AIChatFlows - Secure Environment Configuration Template
# Copy this file to .env and fill in your actual values
# NEVER commit the actual .env file to version control

# =============================================================================
# DEPLOYMENT ENVIRONMENT
# =============================================================================
ENVIRONMENT=development  # Options: development, staging, production

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Domain Configuration (CRITICAL FOR SECURITY)
# TODO: SECURITY - Update these for your production domain
ALLOWED_ORIGINS=https://aichatflows.com,https://www.aichatflows.com
SUCCESS_URL=https://aichatflows.com/thank-you

# Trusted Hosts - Add your production domains
# TRUSTED_HOSTS=aichatflows.com,www.aichatflows.com,yourdomain.herokuapp.com

# =============================================================================
# EMAIL SERVICE CONFIGURATION (REQUIRED)
# =============================================================================

# SMTP Settings - Use secure email provider (Gmail, SendGrid, etc.)
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password  # Use app password, not regular password
FROM_EMAIL=noreply@aichatflows.com

# Gmail Setup Instructions:
# 1. Enable 2-factor authentication on your Gmail account
# 2. Generate an app password: https://myaccount.google.com/apppasswords
# 3. Use the app password here, not your regular Gmail password

# Alternative SMTP Providers:
# SendGrid: smtp.sendgrid.net, port 587
# Mailgun: smtp.mailgun.org, port 587
# AWS SES: email-smtp.us-east-1.amazonaws.com, port 587

# =============================================================================
# STRIPE PAYMENT CONFIGURATION (REQUIRED)
# =============================================================================

# Stripe Payment URLs - Get these from your Stripe dashboard
# TODO: SECURITY - Replace with your actual Stripe payment links
STRIPE_STARTER_URL=https://buy.stripe.com/your-starter-plan-url
STRIPE_PRO_URL=https://buy.stripe.com/your-pro-plan-url

# How to get Stripe URLs:
# 1. Log into your Stripe dashboard
# 2. Go to Products > Create Product
# 3. Set up recurring billing
# 4. Generate payment links
# 5. Add success_url parameter: ?success_url=https://aichatflows.com/thank-you

# =============================================================================
# DATABASE CONFIGURATION (OPTIONAL)
# =============================================================================

# Currently using file-based storage, but you can add database config here
# DATABASE_URL=postgresql://user:password@localhost:5432/aichatflows
# REDIS_URL=redis://localhost:6379

# =============================================================================
# LOGGING & MONITORING (RECOMMENDED)
# =============================================================================

# Log Level - Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# External Monitoring (Optional)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
# DATADOG_API_KEY=your-datadog-api-key

# =============================================================================
# RATE LIMITING CONFIGURATION
# =============================================================================

# Rate limit storage (Redis recommended for production)
# RATE_LIMIT_STORAGE_URL=redis://localhost:6379

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================

# Maximum file upload size in bytes (default: 5MB)
MAX_UPLOAD_SIZE=5242880

# Allowed file types for uploads
ALLOWED_FILE_TYPES=application/pdf,image/jpeg,image/png,image/jpg

# File storage path (ensure this directory exists and is writable)
UPLOAD_DIRECTORY=./uploads

# =============================================================================
# SECURITY NOTES
# =============================================================================

# 1. Never commit this file with real values to version control
# 2. Use strong, unique passwords for all services
# 3. Enable 2FA on all external services (Gmail, Stripe, etc.)
# 4. Regularly rotate passwords and API keys
# 5. Use environment-specific configurations
# 6. Monitor your application logs for security events
# 7. Keep all dependencies updated

# =============================================================================
# DEPLOYMENT CHECKLIST
# =============================================================================

# Before deploying to production:
# [ ] Update ENVIRONMENT to "production"
# [ ] Set correct ALLOWED_ORIGINS and SUCCESS_URL
# [ ] Configure SMTP with production email service
# [ ] Set up real Stripe payment URLs
# [ ] Enable HTTPS and update all URLs to https://
# [ ] Set up monitoring and logging
# [ ] Configure backup strategy
# [ ] Test all functionality in staging environment
# [ ] Review and update security headers
# [ ] Set up SSL certificates
# [ ] Configure CDN if needed

# =============================================================================
# HEROKU DEPLOYMENT
# =============================================================================

# If deploying to Heroku, set these environment variables:
# heroku config:set ENVIRONMENT=production
# heroku config:set SMTP_USERNAME=your-email@gmail.com
# heroku config:set SMTP_PASSWORD=your-app-password
# heroku config:set STRIPE_STARTER_URL=https://buy.stripe.com/...
# heroku config:set STRIPE_PRO_URL=https://buy.stripe.com/...
# heroku config:set SUCCESS_URL=https://your-app.herokuapp.com/thank-you

# =============================================================================
# LOCAL DEVELOPMENT
# =============================================================================

# For local development, you can use these test values:
# ENVIRONMENT=development
# ALLOWED_ORIGINS=http://localhost:8000,http://127.0.0.1:8000
# SUCCESS_URL=http://localhost:8000/thank-you